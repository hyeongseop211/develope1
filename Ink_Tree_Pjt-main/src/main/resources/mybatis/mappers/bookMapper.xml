
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boot.dao.BookDAO">

	<!-- 책 등록 (관리자전용) -->
	<insert id="insertBook">
		insert into bookinfo(bookNumber, bookTitle,
		bookComent, bookWrite, bookPub,
		bookDate, bookMajorCategory,
		bookSubCategory, bookCount, bookIsbn)
		values ((select
		nvl(max(bookNumber), 0)+1
		from bookinfo),
		#{bookTitle}, #{bookComent},
		#{bookWrite}, #{bookPub},
		#{bookDate}, #{bookMajorCategory},
		#{bookSubCategory}, #{bookCount}, #{bookIsbn})
	</insert>
	<!-- 책 수정(관리자전용) -->
	<update id="updateBook"> update bookinfo set bookIsbn=#{bookIsbn},
		bookTitle=#{bookTitle}, bookComent=#{bookComent},
		bookWrite=#{bookWrite}, bookPub=#{bookPub}, bookDate=#{bookDate},
		bookMajorCategory=#{bookMajorCategory},
		bookSubCategory=#{bookSubCategory}, bookCount=#{bookCount} where
		bookNumber=#{bookNumber}
	</update>

	<!-- 메인에 보여질 책 -->
	<select id="mainBookInfo"
		resultType="com.boot.dto.BookDTO">
		SELECT
		bookNumber,
		bookIsbn,
		bookTitle,
		bookComent,
		bookWrite,
		bookPub,
		bookDate,
		SUBSTR(bookMajorCategory, INSTR(bookMajorCategory, '-') + 1) AS bookMajorCategory,
		SUBSTR(bookSubCategory, INSTR(bookSubCategory, '-') + 1) AS
		bookSubCategory,
		bookCount,
		bookBorrowCount
		FROM (
		SELECT *
		FROM bookinfo
		ORDER BY bookBorrowCount DESC
		)
		WHERE ROWNUM &lt;= 10
	</select>



<select id="searchBookInfo" resultType="com.boot.dto.BookDTO">
    SELECT * FROM (
        SELECT a.*, ROWNUM rn FROM (
            SELECT * FROM bookinfo
            <where>
                <choose>
                    <when test='criteria.type != null and criteria.type.equals("T") and criteria.keyword != null and criteria.keyword != ""'>
                        bookTitle LIKE '%' || #{criteria.keyword} || '%'
                    </when>
                    <when test='criteria.type != null and criteria.type.equals("A") and criteria.keyword != null and criteria.keyword != ""'>
                        bookWrite LIKE '%' || #{criteria.keyword} || '%'
                    </when>
                    <when test='criteria.type != null and criteria.type.equals("I") and criteria.keyword != null and criteria.keyword != ""'>
                        bookIsbn LIKE '%' || #{criteria.keyword} || '%'
                    </when>
                    <when test='criteria.type != null and criteria.type.equals("P") and criteria.keyword != null and criteria.keyword != ""'>
                        bookPub LIKE '%' || #{criteria.keyword} || '%'
                    </when>
                </choose>
                
                <if test="majorCategory != null and majorCategory != ''">
                    AND bookMajorCategory = #{majorCategory}
                </if>
                
                <if test="subCategory != null and subCategory != ''">
                    AND bookSubCategory = #{subCategory}
                </if>
            </where>
            ORDER BY bookNumber DESC
        ) a WHERE ROWNUM &lt;= #{criteria.pageNum} * #{criteria.amount}
    ) WHERE rn > (#{criteria.pageNum} - 1) * #{criteria.amount}
</select>

<select id="getSearchBookTotalCount" resultType="int">
    SELECT COUNT(*) FROM bookinfo
    <where>
        <choose>
            <when test='criteria.type != null and criteria.type.equals("T") and criteria.keyword != null and criteria.keyword != ""'>
                bookTitle LIKE '%' || #{criteria.keyword} || '%'
            </when>
            <when test='criteria.type != null and criteria.type.equals("A") and criteria.keyword != null and criteria.keyword != ""'>
                bookWrite LIKE '%' || #{criteria.keyword} || '%'
            </when>
            <when test='criteria.type != null and criteria.type.equals("I") and criteria.keyword != null and criteria.keyword != ""'>
                bookIsbn LIKE '%' || #{criteria.keyword} || '%'
            </when>
            <when test='criteria.type != null and criteria.type.equals("P") and criteria.keyword != null and criteria.keyword != ""'>
                bookPub LIKE '%' || #{criteria.keyword} || '%'
            </when>
        </choose>
        
        <if test="majorCategory != null and majorCategory != ''">
            AND bookMajorCategory = #{majorCategory}
        </if>
        
        <if test="subCategory != null and subCategory != ''">
            AND bookSubCategory = #{subCategory}
        </if>
    </where>
</select>
	<!-- 도서검색 카테고리별로 정리 -->
<!--	<select id="searchBookInfo"-->
<!--		resultType="com.boot.dto.BookDTO" parameterType="map">-->
<!--		SELECT-->
<!--		bookNumber,-->
<!--		bookIsbn,-->
<!--		bookTitle,-->
<!--		bookComent,-->
<!--		bookWrite,-->
<!--		bookPub,-->
<!--		bookDate,-->
<!--		SUBSTR(bookMajorCategory, INSTR(bookMajorCategory, '-') + 1) AS bookMajorCategory,-->
<!--		SUBSTR(bookSubCategory, INSTR(bookSubCategory, '-') + 1) AS bookSubCategory,-->
<!--		bookCount,-->
<!--		bookBorrowCount-->
<!--		FROM bookinfo-->
<!--		WHERE 1=1-->

<!--		<choose>-->
<!--			<when-->
<!--				test="searchType == 'title' and searchKeyword != null and searchKeyword != ''">-->
<!--				AND bookTitle LIKE '%' || #{searchKeyword} || '%'-->
<!--			</when>-->
<!--			<when-->
<!--				test="searchType == 'author' and searchKeyword != null and searchKeyword != ''">-->
<!--				AND bookWrite LIKE '%' || #{searchKeyword} || '%'-->
<!--			</when>-->
<!--			<when-->
<!--				test="searchType == 'isbn' and searchKeyword != null and searchKeyword != ''">-->
<!--				AND bookIsbn LIKE '%' || #{searchKeyword} || '%'-->
<!--			</when>-->
<!--			<when-->
<!--				test="searchType == 'publisher' and searchKeyword != null and searchKeyword != ''">-->
<!--				AND bookPub LIKE '%' || #{searchKeyword} || '%'-->
<!--			</when>-->
<!--		</choose>-->

<!--		<if test="majorCategory != null and majorCategory != ''">-->
<!--			AND bookMajorCategory = #{majorCategory}-->
<!--		</if>-->

<!--		<if test="subCategory != null and subCategory != ''">-->
<!--			AND bookSubCategory = #{subCategory}-->
<!--		</if>-->

<!--		ORDER BY bookTitle ASC-->
<!--	</select>-->

	<!-- 책 디테일 -->
	<select id="bookDetailInfo"
		resultType="com.boot.dto.BookDTO">
		select
		bookNumber,
		bookIsbn,
		bookTitle,
		bookComent,
		bookWrite,
		bookPub,
		bookDate,
		SUBSTR(bookMajorCategory, INSTR(bookMajorCategory, '-') + 1) AS bookMajorCategory,
		SUBSTR(bookSubCategory, INSTR(bookSubCategory, '-') + 1) AS bookSubCategory,
		bookCount,
		bookBorrowCount
		from bookinfo where bookNumber=#{bookNumber}
	</select>

	<!-- 책 대출 -->
	<insert id="bookBorrow">
		insert into book_borrow(BORROWNUMBER, USERNUMBER,
		BOOKNUMBER)
		values ((select nvl(max(BORROWNUMBER), 0)+1
		from
		book_borrow),${userNumber},${bookNumber})
	</insert>

	<!-- 책 반납 -->
	<insert id="bookReturn">
		insert into book_record(recordNumber, USERNUMBER,
		BOOKNUMBER) values
		((select nvl(max(recordNumber), 0)+1 from
		book_record),${userNumber},${bookNumber})
	</insert>
	
	
    <select id="getBorrowedTotalCount" resultType="int">
    	select count(*) from book_borrow where userNumber = #{userNumber}
    </select>
    <select id="getRecordTotalCount" resultType="int">
    	select count(*) from book_record where userNumber = #{userNumber}
    </select>
    
<!-- 책 대출현황 -->
<select id="bookBorrowed" resultType="com.boot.dto.BookRecordDTO">
    <![CDATA[
        SELECT bookTitle, bookWrite, borrowNumber, userNumber, bookNumber, bookBorrowDate, bookReturnDate
        FROM (
            SELECT rownum as rn, bookTitle, bookWrite, borrowNumber, userNumber, bookNumber, bookBorrowDate, bookReturnDate
            FROM (
                SELECT bookTitle, bookWrite, borrowNumber, userNumber, bookNumber, bookBorrowDate, bookReturnDate
                FROM book_borrow
                WHERE userNumber = #{param.userNumber}
                ORDER BY bookReturnDate DESC
            ) a
            where rownum <= (#{criteria.pageNum} * #{criteria.amount})
        )aa
        where rn > (#{criteria.pageNum} - 1) * #{criteria.amount}
    ]]>
</select>

<!-- 대출,반납 전체 기록 -->
<select id="bookRecord" resultType="com.boot.dto.BookRecordDTO">
    <![CDATA[
        SELECT recordNumber, userNumber, bookNumber, bookReturnDate, bookBorrowDate, bookTitle, bookWrite
        FROM (
            SELECT rownum as rn, recordNumber, userNumber, bookNumber, bookReturnDate, bookBorrowDate, bookTitle, bookWrite
            FROM (
                SELECT recordNumber, userNumber, bookNumber, bookReturnDate, bookBorrowDate, bookTitle, bookWrite
                FROM book_record
                WHERE userNumber = #{param.userNumber}
                ORDER BY bookReturnDate DESC
            ) a
            where rownum <= (#{criteria.pageNum} * #{criteria.amount})
        )aa
        where rn > (#{criteria.pageNum} - 1) * #{criteria.amount}
    ]]>
</select>



	<!-- 삭제 -->
	<update id="deleteBook">
		delete from bookinfo where bookNumber=#{bookNumber}
	</update>

</mapper>